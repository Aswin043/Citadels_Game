/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.3/userguide/tutorial_java_projects.html
 */
plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application
    id 'application'

    id 'jacoco'
}


group = 'citadels'
version = '1.0-SNAPSHOT'

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    // implementation 'com.google.guava:guava:28.0-jre'
    // implementation 'org.processing:core:3.3.7'
    // implementation 'org.reflections:reflections:0.10.2'

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'

    // Use JUnit Jupiter Engine for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    testImplementation 'org.mockito:mockito-core:4.5.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.5.1'

    implementation 'com.google.code.gson:gson:2.10.1'
}

application {
    // Define the main class for the application
    mainClass = 'citadels.Game'
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jar {
    manifest {
        attributes 'Main-Class': 'citadels.Game'
    }
    
    // Include all dependencies in the jar
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    
    // Avoid duplicate files in the jar
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    
    // Set the output jar name and location
    archiveFileName = 'citadels.jar'
    destinationDirectory = file('build/libs')
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

// Add Javadoc configuration
javadoc {
    options {
        encoding = 'UTF-8'
        charSet = 'UTF-8'
        docEncoding = 'UTF-8'
        links = ['https://docs.oracle.com/javase/8/docs/api/']
        addStringOption('Xdoclint:none', '-quiet')
    }
    title = 'Citadels Game Documentation'
    destinationDir = file("${buildDir}/docs/javadoc")
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                'citadels/App.class',
                'citadels/Main.class'
            ])
        }))
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.9
            }
        }
    }
}

check.dependsOn jacocoTestCoverageVerification
